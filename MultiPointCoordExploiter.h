#ifndef _H_MULTIPOINT_COORD_EXPLOITER_
#define _H_MULTIPOINT_COORD_EXPLOITER_
#include "csm.h"
#include "Warning.h"
#include <map>

namespace csm
{
	class MultiPointCoordExploiter
	{
		virtual bool HasImageToGround() = 0;
		virtual std::vector<csm::EcefCoord> imageToGround(const std::vector<csm::ImageCoord>& ImagePts,
			const std::vector<double>& heights,
			double desiredPrecision = 0.001,
			std::vector<double>* achievedPrecisions = nullptr,
			std::vector<csm::WarningList>* warnings = nullptr);

		virtual bool HasGroundToImage() = 0;
		virtual std::vector<csm::ImageCoord> groundToImage(const std::vector<csm::EcefCoord>& groundPts,
			double desiredPrecision = 0.001,
			std::vector<double>* achievedPrecisions = nullptr,
			std::vector<csm::WarningList>* warnings = nullptr);

		// additional methods
	private:
		std::map<std::string, bool>m_capabilityMap;
	};

}

#endif